; this is an example of how to make a ".bin" file.

name "bintest"

; directive to create bin file:
#make_bin#

; where to load?
#load_segment=1234#
#load_offset=0000#

; set these values to registers on load:
#AL=12#
#AH=34#
#BH=56#
#BL=78#
#CH=9a#
#CL=bc#
#DH=de#
#DL=f0#
#DS=ddee#
#ES=abcd#
#SI=aaaa#
#DI=cccc#
#BP=dddd#
#CS=1234#
#ip=0000#
#SS=3000#
#SP=ffff#

; when loading "bintest.bin" file in emulator
; it will look for a "bintest.binf" file,
; and load ".bin" file to location specified
; in that file, registers are also set using
; information in that file (open this file
; in a text editor to edit or investigate).
;
; ".binf" file is created automatically
; by compiler when it processes the above
; directives.



; this sample just prints out a part of
; some ascii character set, in an eternal
; loop, press [stop] or esc to terminate.


start:

MOV     AL, '0'
MOV     AH, 0eh

print_more:

INT     10h
INC     AL

; keep original ax:
MOV     CX, AX

;============================
; check for esc key to
;    reboot:

; check for keystroke in
; keyboard buffer:
MOV     AH, 1
INT     16h
JZ      key_processed

; get keystroke from keyboard:
; (remove from the buffer)
MOV     AH, 0
INT     16h

; press 'esc' to exit:
CMP     AL, 27
JNZ     key_processed
HLT

key_processed:
;============================

; restore original ax:
MOV     AX, CX


CMP     AL, 'z'
JBE     print_more

MOV     AL, '0'
JMP     print_more








; [SOURCE]: C:\emu8086\examples\bintest.asm
