EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
noname.exe_ -- emu8086 assembler version: 4.08  
 
[ 6/5/2011  --  8:14:45 AM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       ; multi-segment executable file template.
[   2]        :                                       
[   3]        :                                       data SEGMENT
[   4]        :                                       ; add your data here!
[   5]    005F: ??                                    pkey DB "press any key...$"
[   6]        :                                       ENDS
[   7]        :                                       
[   8]        :                                       stack SEGMENT
[   9]    007F: ??                                    DW   128  dup(0)
[  10]        :                                       ENDS
[  11]        :                                       
[  12]        :                                       code SEGMENT
[  13]    017F:                                       start:
[  14]        :                                       ; set segment registers:
[  15]    017F: 00 00 00                              MOV AX, data
[  16]    0182: 00 00                                 MOV DS, AX
[  17]    0184: 00 00                                 MOV ES, AX
[  18]        :                                       
[  19]        :                                       ; add your code here
[  20]        :                                       
[  21]        :                                       org 200
[  22]    0127: 00 00 00                              MOV [SI], 020h
[  23]        :                                       
[  24]    012A: 00 00 00                              LEA DX, pkey
[  25]    012D: 00 00                                 MOV AH, 9
[  26]    012F: 00 00                                 INT 21h        ; output string at ds:dx
[  27]        :                                       
[  28]        :                                       ; wait for any key....
[  29]    0131: 00 00                                 MOV AH, 1
[  30]    0133: 00 00                                 INT 21h
[  31]        :                                       
[  32]    0135: 00 00 00                              MOV AX, 4c00h ; exit to operating system.
[  33]    0138: 00 00                                 INT 21h
[  34]        :                                       ENDS
[  35]        :                                       
[  36]        :                                       END start ; set entry point and stop the assembler.
[  37]        :                                       
[  38]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 3A      -   bytes on last page (l.byte)
0003: 01      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 02      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: 91      -   check sum (l.byte)
0013: 1E      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 12      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 12      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
